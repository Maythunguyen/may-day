/* ---------------------------------------------
   0) Font Definitions (Satoshi Full Family)
   --------------------------------------------- */
   @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Light.woff2') format('woff2');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-LightItalic.woff2') format('woff2');
    font-weight: 300;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Regular.woff2') format('woff2');
    font-weight: 400;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Italic.woff2') format('woff2');
    font-weight: 400;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Medium.woff2') format('woff2');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-MediumItalic.woff2') format('woff2');
    font-weight: 500;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-BoldItalic.woff2') format('woff2');
    font-weight: 700;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-Black.woff2') format('woff2');
    font-weight: 900;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: 'Satoshi';
    src: url('/fonts/Satoshi-BlackItalic.woff2') format('woff2');
    font-weight: 900;
    font-style: italic;
    font-display: swap;
  }

  body {
    font-family: 'Satoshi', sans-serif;
  }

/* 1) Import Tailwind */
@import "tailwindcss";

@layer base {
  
  @theme {

    --color-black-default: #000;
    --color-black-100: #000319;
    --color-black-200: rgba(17, 25, 40, 0.75);
    --color-black-300: rgba(255, 255, 255, 0.125);
    
    --color-white-default: #FFF;
    --color-white-100: #BEC1DD;
    --color-white-200: #C1C2D3;
    
    --color-blue-100: #E4ECFF;
    --color-purple: #CBACF9;

    --color-muted-pink: #f9c5d1;
    --color-muted-green: #a3b18a;
    --color-sand: #fefae0;
    --color-dark-orange: #E76250;
    --color-orange-1: #da721b;
    --color-orange-2: #ff9943;
    --color-orange-3: #fec08c;
    --color-orange-4: #ffeadb;

    /* Infiity moving cards */
    --animate-scroll: scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite;
  
    /* Border radius tokens */
    --radius-lg: 0.5rem;
    --radius-md: calc(0.5rem - 2px);
    --radius-sm: calc(0.5rem - 4px);

    --shadow-input:
    0px 2px 3px -1px rgba(0, 0, 0, 0.1),
    0px 1px 0px 0px rgba(25, 28, 33, 0.02),
    0px 0px 0px 1px rgba(25, 28, 33, 0.08);
  }

  body {
    font-family: 'Satoshi', sans-serif;
  }


  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }

  @keyframes spotlight {
    0% {
      opacity: 0;
      transform: translate(-72%, -62%) scale(0.5);
    }
    100% {
      opacity: 1;
      transform: translate(-50%, -40%) scale(1);
    }
  }

  @keyframes shimmer {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  @keyframes moveHorizontal {
    0% {
      transform: translateX(-50%) translateY(-10%);
    }
    50% {
      transform: translateX(50%) translateY(10%);
    }
    100% {
      transform: translateX(-50%) translateY(-10%);
    }
  }

  @keyframes moveInCircle {
    0% {
      transform: rotate(0deg);
    }
    50% {
      transform: rotate(180deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes moveVertical {
    0% {
      transform: translateY(-50%);
    }
    50% {
      transform: translateY(50%);
    }
    100% {
      transform: translateY(-50%);
    }
  }

  @keyframes scroll {
    100% {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
 
  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
}

/* ------------------------------------------------
   3) UTILITIES LAYER: Turn those tokens/keyframes 
      into classes like .bg-black-100, .animate-spotlight, etc.
   ------------------------------------------------ */
@layer utilities {
  /* 
    a) Color classes referencing @theme variables:
       If your Tailwind setup supports @theme -> .bg-black-default, etc. 
       you'll get them automatically. If not, define them manually:
  */
  .bg-black-default {
    background-color: var(--color-black-default);
  }
  .text-black-default {
    color: var(--color-black-default);
  }
  .bg-black-100 {
    background-color: var(--color-black-100);
  }
  /* ... and so on for each color you want a direct class for ... */

  .bg-purple {
    background-color: var(--color-purple);
  }
  
  .text-purple {
    color: var(--color-purple);
  }

  /* 
    b) Animation classes
    e.g. .animate-spotlight => uses keyframes "spotlight"
  */
  .animate-accordion-down {
    animation: accordion-down 0.2s ease-out;
  }
  .animate-accordion-up {
    animation: accordion-up 0.2s ease-out;
  }
  .animate-spotlight {
    animation: spotlight 2s ease 0.75s 1 forwards;
  }
  .animate-shimmer {
    animation: shimmer 2s linear infinite;
  }
  .animate-first {
    animation: moveVertical 30s ease infinite;
  }
  .animate-second {
    animation: moveInCircle 20s reverse infinite;
  }
  .animate-third {
    animation: moveInCircle 40s linear infinite;
  }
  .animate-fourth {
    animation: moveHorizontal 40s ease infinite;
  }
  .animate-fifth {
    animation: moveInCircle 20s ease infinite;
  }
  .animate-scroll {
    animation: scroll var(--animation-duration, 40s)
      var(--animation-direction, forwards) linear infinite;
  }

  /*
    c) Border radius classes
  */
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .grainy {
    background-image: url('/images/binding-dark.png'); /* or noise.svg/png */
    background-repeat: repeat;
    background-size: cover;
    mix-blend-mode: overlay;
    opacity: 0.2;
    pointer-events: none;
  }

  /*
    d) Container or any other custom classes from your old config
    .container {
      margin-left: auto;
      margin-right: auto;
      padding-left: 2rem;
      padding-right: 2rem;
      max-width: 100%;
    }
    @screen 2xl {
      .container {
        max-width: 1400px;
      }
    }
    ...
  */

  .bg-grid {
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2032%2032'%20fill='none'%20stroke='%23ccc'%3E%3Cpath%20d='M0%20.5H31.5V32'/%3E%3C/svg%3E");
  }
  .bg-grid-small {
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2032%2032'%20width='8'%20height='8'%20fill='none'%20stroke='%23ccc'%3E%3Cpath%20d='M0%20.5H31.5V32'/%3E%3C/svg%3E");
  }
  .bg-dot {
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2032%2032'%20width='16'%20height='16'%20fill='none'%3E%3Ccircle%20fill='%23ccc'%20cx='10'%20cy='10'%20r='1.6257'/%3E%3C/svg%3E");
  }

  
}

/* ------------------------------------------------
   4) (Optional) Dark mode with “prefers-color-scheme”
      Or use the .dark class approach, etc.
   ------------------------------------------------ */
@media (prefers-color-scheme: dark) {
  @layer base {
    @theme {
      /* you can redefine your color tokens for dark mode here if you wish */
      --color-black-default: #000;
      --color-black-100: #000319;
      --color-black-200: rgba(17,25,40,0.75);
      --color-black-300: rgba(255,255,255,0.125);
      --color-purple: #CBACF9;
      /* etc. */
    }
  }
}

.modal-scroll-container {
  max-height: 80vh;   /* 80% of viewport height */
  overflow-y: auto;   /* show scrollbar when needed */
  padding-right: 1rem; /* some right padding to avoid text under scrollbar */
}

/* Custom scrollbar (WebKit-based browsers) */
.modal-scroll-container::-webkit-scrollbar {
  width: 8px;                /* narrower than default */
}
.modal-scroll-container::-webkit-scrollbar-track {
  background: transparent;   /* no track background */
}
.modal-scroll-container::-webkit-scrollbar-thumb {
  background-color: #aaa;    /* color of the scrollbar thumb */
  border-radius: 4px;
}
.modal-scroll-container::-webkit-scrollbar-thumb:hover {
  background-color: #888;
}
